{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://questfoundry.liesdonk.nl/schemas/hook_card.schema.json",
  "title": "Hook Card",
  "description": "Small, traceable follow-up for new needs or uncertainties. Generated from 02-dictionary/artifacts/hook_card_ENRICHED.md. Hooks are classified, routed to appropriate loops, and kept player-safe.",
  "type": "object",
  "properties": {
    "header": {
      "type": "object",
      "description": "Metadata section with ID, status, and context",
      "properties": {
        "short_name": {
          "type": "string",
          "description": "Brief hook title",
          "minLength": 3,
          "maxLength": 80
        },
        "id": {
          "type": "string",
          "description": "Unique hook identifier in format HK-YYYYMMDD-seq",
          "pattern": "^HK-\\d{8}-(0[1-9]|[1-9]\\d{1,2})$"
        },
        "status": {
          "type": "string",
          "description": "Current hook status (see taxonomies.md §2)",
          "enum": [
            "proposed",
            "accepted",
            "in-progress",
            "resolved",
            "canonized",
            "deferred",
            "rejected"
          ]
        },
        "raised_by": {
          "$ref": "#/definitions/role_name",
          "description": "Role that created this hook"
        },
        "tu": {
          "type": "string",
          "description": "Origin TU Brief ID",
          "pattern": "^TU-\\d{4}-\\d{2}-\\d{2}-[A-Z]{2,4}\\d{2}$"
        },
        "edited": {
          "$ref": "#/definitions/date_string",
          "description": "Last edited date"
        },
        "slice": {
          "type": "string",
          "description": "Scope description (player-safe, 1-2 lines, no spoilers)",
          "minLength": 10,
          "maxLength": 200
        },
        "snapshot_context": {
          "type": "string",
          "description": "Cold snapshot reference (format: 'Cold @ YYYY-MM-DD')",
          "pattern": "^Cold @ \\d{4}-\\d{2}-\\d{2}.*$"
        }
      },
      "required": [
        "short_name",
        "id",
        "status",
        "raised_by",
        "tu",
        "edited",
        "slice",
        "snapshot_context"
      ]
    },
    "classification": {
      "type": "object",
      "description": "Hook type and impact classification",
      "properties": {
        "type_primary": {
          "type": "string",
          "description": "Primary hook type (see taxonomies.md §1 for 13 types)",
          "enum": [
            "narrative",
            "scene",
            "factual",
            "taxonomy",
            "structure",
            "canon",
            "research",
            "style/pn",
            "translation",
            "art",
            "audio",
            "binder/nav",
            "accessibility"
          ]
        },
        "type_secondary": {
          "type": "string",
          "description": "Optional secondary type (must differ from primary)",
          "enum": [
            "narrative",
            "scene",
            "factual",
            "taxonomy",
            "structure",
            "canon",
            "research",
            "style/pn",
            "translation",
            "art",
            "audio",
            "binder/nav",
            "accessibility"
          ]
        },
        "bars_affected": {
          "type": "array",
          "description": "Quality Bars impacted by this hook (see taxonomies.md §5)",
          "items": {
            "$ref": "#/definitions/quality_bar"
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "blocking": {
          "type": "string",
          "description": "Whether hook blocks progress (yes with explanation, or no)",
          "pattern": "^(no|yes \\(.+\\))$"
        }
      },
      "required": [
        "type_primary",
        "bars_affected",
        "blocking"
      ]
    },
    "player_safe_summary": {
      "type": "string",
      "description": "Brief player-facing need description (1-3 lines, no spoilers, no internals)",
      "minLength": 10,
      "maxLength": 240
    },
    "hot_details": {
      "type": "string",
      "description": "Optional internal routing details (spoilers allowed, Hot-only, never surfaces to players)",
      "minLength": 0,
      "maxLength": 500
    },
    "proposed_next_step": {
      "type": "object",
      "description": "Suggested smallest loop and owner to resolve",
      "properties": {
        "loop": {
          "$ref": "#/definitions/loop_name",
          "description": "Recommended loop for resolution (13 loops, see taxonomies.md §3)"
        },
        "owner_r": {
          "$ref": "#/definitions/role_name",
          "description": "Responsible role"
        },
        "accountable_a": {
          "$ref": "#/definitions/role_name",
          "description": "Accountable role (usually Showrunner)"
        },
        "consult": {
          "type": "array",
          "description": "Roles to consult",
          "items": {
            "$ref": "#/definitions/role_name"
          },
          "uniqueItems": true
        },
        "dormancy": {
          "type": "string",
          "description": "Optional note about dormant roles"
        }
      },
      "required": [
        "loop",
        "owner_r",
        "accountable_a"
      ]
    },
    "acceptance_criteria": {
      "type": "array",
      "description": "Exit criteria to close this hook (each tied to Quality Bars)",
      "items": {
        "type": "string",
        "minLength": 10
      },
      "minItems": 1
    },
    "dormancy_deferrals": {
      "type": "object",
      "description": "Optional deferral configuration if work can wait safely",
      "properties": {
        "deferral_tags": {
          "type": "array",
          "description": "Space-separated deferral types (see taxonomies.md §7)",
          "items": {
            "$ref": "#/definitions/deferral_tag"
          },
          "uniqueItems": true
        },
        "fallback": {
          "type": "string",
          "description": "Required if deferrals set. What happens without deferred work",
          "minLength": 10
        },
        "revisit": {
          "type": "string",
          "description": "Required if deferrals set. Loop name or milestone/date to revisit",
          "minLength": 5
        }
      }
    },
    "locations_links": {
      "type": "object",
      "description": "References and lineage tracking",
      "properties": {
        "locations": {
          "type": "array",
          "description": "Player-safe location refs (paths/anchors)",
          "items": {
            "type": "string"
          }
        },
        "related_hooks": {
          "type": "array",
          "description": "Related hook IDs",
          "items": {
            "type": "string",
            "pattern": "^HK-\\d{8}-\\d{2,3}$"
          }
        },
        "lineage": {
          "type": "string",
          "description": "Upstream lineage (Canon Packs, Research Memos, Style Addenda, ADRs)"
        }
      }
    },
    "resolution": {
      "type": "object",
      "description": "Filled when hook is closed",
      "properties": {
        "decision": {
          "type": "string",
          "description": "One sentence resolution decision",
          "minLength": 10,
          "maxLength": 200
        },
        "work_performed": {
          "type": "array",
          "description": "TU IDs of work done",
          "items": {
            "type": "string",
            "pattern": "^TU-\\d{4}-\\d{2}-\\d{2}-[A-Z]{2,4}\\d{2}$"
          }
        },
        "view_impact": {
          "type": "string",
          "description": "Impact on views",
          "enum": [
            "none",
            "rebind needed"
          ]
        },
        "gatekeeper_result": {
          "type": "string",
          "description": "Brief bars green summary"
        },
        "resolved_date": {
          "$ref": "#/definitions/date_string",
          "description": "Date hook was resolved"
        },
        "resolved_by": {
          "$ref": "#/definitions/role_name",
          "description": "Role that closed the hook"
        }
      }
    }
  },
  "required": [
    "header",
    "classification",
    "player_safe_summary",
    "proposed_next_step",
    "acceptance_criteria",
    "locations_links"
  ],
  "definitions": {
    "role_name": {
      "type": "string",
      "description": "QuestFoundry role abbreviation (see 02-dictionary/role_abbreviations.md)",
      "enum": [
        "SR",
        "GK",
        "PW",
        "SS",
        "ST",
        "LW",
        "CC",
        "AD",
        "IL",
        "AuD",
        "AuP",
        "TR",
        "BB",
        "PN",
        "RS"
      ]
    },
    "date_string": {
      "type": "string",
      "description": "Date in YYYY-MM-DD format",
      "format": "date",
      "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
    },
    "quality_bar": {
      "type": "string",
      "description": "One of 8 Quality Bars (see taxonomies.md §5)",
      "enum": [
        "Integrity",
        "Reachability",
        "Nonlinearity",
        "Gateways",
        "Style",
        "Determinism",
        "Presentation",
        "Accessibility"
      ]
    },
    "loop_name": {
      "type": "string",
      "description": "One of 13 TU loop types (see taxonomies.md §3 and loop_names.md)",
      "enum": [
        "Story Spark",
        "Hook Harvest",
        "Lore Deepening",
        "Codex Expansion",
        "Style Tune-up",
        "Art Touch-up",
        "Audio Pass",
        "Translation Pass",
        "Binding Run",
        "Narration Dry-Run",
        "Gatecheck",
        "Post-Mortem",
        "Archive Snapshot"
      ]
    },
    "deferral_tag": {
      "type": "string",
      "description": "Deferral type for dormant roles (see taxonomies.md §7)",
      "enum": [
        "deferred:art",
        "deferred:audio",
        "deferred:translation",
        "deferred:research"
      ]
    }
  }
}